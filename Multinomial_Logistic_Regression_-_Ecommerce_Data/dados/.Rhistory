mutate(month = format(as.Date(month), '%b'))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
select(-c(1,2)) %>%
mutate(month = format(as.Date(month), '%b'))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
select(-c(1,2)) %>%
mutate(month = format(as.Date(month), '%b'))
str(order_purchase_timestamp$month)
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
select(-c(1,2)) %>%
mutate(month = format(as.Date(month), '%b'))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = format(as.Date(month), '%b'))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = format(as.Date(month), '%b')) %>%
select(-c(1,2))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = format(as.Date(month)))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = format(as.Date(month), '%m')) %>%
select(-c(1,2))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = format(as.Date(month), origin = '%m')) %>%
select(-c(1,2))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = as.Date(month)) %>%
select(-c(1,2))
d <- 8
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = month.abb[month]) %>%
select(-c(1,2))
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = month.abb[month]) %>%
select(-c(1,2))
## Qty de ordens em cada ano
year <- order_purchase_timestamp %>%
select(year) %>%
group_by(year) %>%
summarise(count = n()) %>%
mutate(percent = scales::percent(count/sum(count)))
year
month <- ggplot(order_purchase_timestamp, aes(x = as.factor(month))) +
geom_histogram(color = 'black', fill = 'white', stat = 'count')
grid.arrange(month, day, ncol = 1, nrow = 2)
str(order_purchase_timestamp$month)
month <- ggplot(order_purchase_timestamp, aes(x = month)) +
geom_histogram(color = 'black', fill = 'white', stat = 'count')
grid.arrange(month, day, ncol = 1, nrow = 2)
order_purchase_timestamp$month <- factor(order_purchase_timestamp$month, levels = month.abb)
month <- ggplot(order_purchase_timestamp, aes(x = month)) +
geom_histogram(color = 'black', fill = 'white', stat = 'count') +
scale_x_discrete(limits = month.abb)
grid.arrange(month, day, ncol = 1, nrow = 2)
order_purchase_timestamp <- olist_data %>%
select(order_purchase_timestamp) %>%
mutate(order_purchase_datetime = lubridate::ymd_hms(order_purchase_timestamp),
year = lubridate::year(order_purchase_datetime),
month = lubridate::month(order_purchase_datetime),
day = lubridate::day(order_purchase_datetime),
hour = lubridate::hour(order_purchase_datetime)) %>%
mutate(month = month.abb[month]) %>%
select(-c(1,2))
month <- ggplot(order_purchase_timestamp, aes(x = month)) +
geom_histogram(color = 'black', fill = 'white', stat = 'count') +
scale_x_discrete(limits = month.abb)
grid.arrange(month, day, ncol = 1, nrow = 2)
aprove_order_delay <- olist_data %>%
select(order_purchase_timestamp, order_aproved_at, customer_state) %>%
mutate(order_purchase = lubridate::ymd_hms(order_purchase_timestamp),
order_aprove = lubridate::ymd_hms(order_aproved_at),
delay_in_h = (order_aprove -  order_purchase)/3600) %>%
select(delay_in_h, customer_state)
mean_approval_delay <- aprove_order_delay %>%
group_by(customer_state) %>%
summarise(mean_delay = mean(delay_in_h))
ggplot(mean_approval_delay, aes(x = customer_state, y = as.numeric(mean_delay))) +
geom_histogram(color = 'black', fill = 'white', stat = 'identity')
#Diff between delivery estimated time and true
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation = as.Date(order_estimated_delivery_date) - as.Date(order_delivered_customer_date),
error =  delivery_estimation - delivery_delay)
plot(estimated_delivery_error$delivery_delay ~ estimated_delivery_error$delivery_estimation, cex = .5)
ggplot(estimated_delivery_error$delivery_delay ~ estimated_delivery_error$delivery_estimation, cex = .5)
#plot(estimated_delivery_error$delivery_delay ~ estimated_delivery_error$delivery_estimation, cex = .5)
ggplot(estimated_delivery_error, aes(x = delivery_estimation, y = delivery_delay)
estimated_delivery_error$delivery_delay ~ estimated_delivery_error$delivery_estimation, cex = .5)
#plot(estimated_delivery_error$delivery_delay ~ estimated_delivery_error$delivery_estimation, cex = .5)
ggplot(estimated_delivery_error, aes(x = delivery_estimation, y = delivery_delay))
#plot(estimated_delivery_error$delivery_delay ~ estimated_delivery_error$delivery_estimation, cex = .5)
ggplot(estimated_delivery_error, aes(x = delivery_estimation, y = delivery_delay)) +
geom_point()
delivery_error$delivery_delay ~ estimated_delivery_error$delivery_estimation, cex = .5)
ggplot(estimated_delivery_error, aes(x = delivery_estimation, y = delivery_delay)) +
geom_point()
#Diff between delivery estimated time and true
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation = as.Date(order_estimated_delivery_date) - as.Date(order_delivered_customer_date),
error =  delivery_estimation - delivery_delay)
ggplot(estimated_delivery_error, aes(x = delivery_estimation, y = delivery_delay)) +
geom_point()
## Delay médio por UF entre compra e aprovação do pagamento
aprove_order_delay <- olist_data %>%
select(order_purchase_timestamp, order_aproved_at, customer_state) %>%
mutate(order_purchase = lubridate::ymd_hms(order_purchase_timestamp),
order_aprove = lubridate::ymd_hms(order_aproved_at),
delay_in_h = (order_aprove -  order_purchase)/3600) %>%
select(delay_in_h, customer_state)
mean_approval_delay <- aprove_order_delay %>%
group_by(customer_state) %>%
summarise(mean_delay = mean(delay_in_h))
ggplot(mean_approval_delay, aes(x = customer_state, y = as.numeric(mean_delay))) +
geom_histogram(color = 'black', fill = 'white', stat = 'identity')
#Diff between delivery estimated time and true
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation = as.Date(order_estimated_delivery_date) - as.Date(order_delivered_customer_date),
error =  delivery_estimation - delivery_delay)
ggplot(estimated_delivery_error, aes(x = delivery_estimation, y = delivery_delay)) +
geom_point()
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date)
View(estimated_delivery_error)
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation_delay = as.Date(order_estimated_delivery_date) - as.Date(order_delivered_customer_date),
error =  delivery_estimation - delivery_delay)
estimated_delivery_error <- olist_data
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date)
View(estimated_delivery_error)
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation_delay = as.Date(order_estimated_delivery_date) - as.Date(order_delivered_customer_date),
error =  delivery_estimation_delay - delivery_delay)
#Diff between delivery estimated time and true
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation_delay = as.Date(order_estimated_delivery_date) - as.Date(order_delivered_customer_date),
error =  delivery_estimation_delay - delivery_delay)
ggplot(estimated_delivery_error, aes(x = delivery_estimation_delay, y = error)) +
geom_point()
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation_delay = as.Date(order_estimated_delivery_date) - as.Date(order_aproved_at),
error =  delivery_estimation_delay - delivery_delay)
#Diff between delivery estimated time and true
estimated_delivery_error <- olist_data %>%
select(order_aproved_at, order_delivered_customer_date, order_estimated_delivery_date) %>%
mutate(order_aproved_at = format(as.Date(order_aproved_at), "%Y-%m-%d"),
order_delivered_customer_date = format(as.Date(order_delivered_customer_date), "%Y-%m-%d"),
order_estimated_delivery_date = format(as.Date(order_estimated_delivery_date), "%Y-%m-%d"),
delivery_delay = as.Date(order_delivered_customer_date) - as.Date(order_aproved_at),
delivery_estimation_delay = as.Date(order_estimated_delivery_date) - as.Date(order_aproved_at),
error =  delivery_estimation_delay - delivery_delay)
ggplot(estimated_delivery_error, aes(x = delivery_estimation_delay, y = error)) +
geom_point()
cities_geocodes <- read_csv('cities_geocodes.csv')
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
brazil_map
customer_state <- olist_data %>%
select(customer_state) %>%
group_by(customer_state) %>%
summarise(count = n()) %>%
mutate(percent = scales::percent(count/sum(count)))
customer_state
customer_state <- olist_data %>%
select(customer_state) %>%
group_by(customer_state) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
mutate(percent = scales::percent(count/sum(count)))
customer_state
customer_state <- olist_data %>%
select(customer_state) %>%
group_by(customer_state) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
mutate(percent = scales::percent(count/sum(count)))
customer_state
categories <- olist_data %>%
select(product_category_name) %>%
group_by(product_category_name) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
mutate(percent = count/sum(count))
categories$product_category_name <- factor(categories$product_category_name, levels = categories$product_category_name)
ggplot(categories, aes(x = product_category_name, y = percent)) +
geom_histogram(stat = 'identity', color = 'black', fill = 'white') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent)
categories <- olist_data %>%
select(product_category_name) %>%
group_by(product_category_name) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
mutate(percent = count/sum(count))
categories$product_category_name <- factor(categories$product_category_name, levels = categories$product_category_name)
ggplot(categories, aes(x = product_category_name, y = percent)) +
geom_histogram(stat = 'identity', color = 'black', fill = 'white') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent)
ad_stats <- olist_data %>%
select(product_name_lenght, product_description_lenght, product_photos_qty, review_score)
product_name_lenght <- ggplot(ad_stats, aes(x = product_name_lenght)) +
geom_histogram( color = 'black', fill = 'white')
product_description_lenght <- ggplot(ad_stats, aes(x = product_description_lenght)) +
geom_histogram( color = 'black', fill = 'white')
product_photos_qty <- ggplot(ad_stats, aes(x = product_photos_qty)) +
geom_histogram( color = 'black', fill = 'white')
review_score <- ggplot(ad_stats, aes(x = review_score)) +
geom_histogram( color = 'black', fill = 'white')
grid.arrange(product_name_lenght, product_description_lenght, product_photos_qty, review_score, ncol = 2)
review_answer_delay <- olist_data %>%
select(review_creation_date, review_answer_timestamp) %>%
mutate(review_creation_date = lubridate::ymd_hms(review_creation_date),
review_answer_timestamp = lubridate::ymd_hms(review_answer_timestamp),
delay = as.numeric(review_answer_timestamp - review_creation_date))
ggplot(review_answer_delay, aes(x = delay)) +
geom_histogram( color = 'black', fill = 'white')
library(wordcloud)
library(SnowballC)
library(tm)
review_title_cloud <- olist_data %>%
select(review_comment_message)
## Calculate Corpus
review_title_cloud_corpus <- Corpus(VectorSource(review_title_cloud$review_comment_message))
## Data cleaning and wrangling
review_title_clean <- tm_map(review_title_cloud_corpus, PlainTextDocument)
review_title_clean <- tm_map(review_title_cloud_corpus, tolower)
review_title_clean <- tm_map(review_title_clean, removeNumbers)
review_title_clean <- tm_map(review_title_clean, removeWords, stopwords("portuguese"))
review_title_clean <- tm_map(review_title_clean, removePunctuation)
review_title_clean <- tm_map(review_title_clean, stripWhitespace)
#review_title_clean <- tm_map(review_title_clean, stemDocument)
wordcloud(review_title_clean, max.words = 200,random.color = TRUE, random.order=FALSE)
# Adding some color
wordcloud(words = review_title_clean, min.freq = 1,
max.words=250, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
brazil_map
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
plot(brazil_map)
install.packages("webshot")
library(readr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(leaflet)
library(magrittr)
library(wordcloud)
library(SnowballC)
library(tm)
library(htmlwidgets)
library(webshot)
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
brazil_map
saveWidget(m, "leaflet_map.html", selfcontained = FALSE)
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
p <- knitr::include_graphics("brazil_map.png")
p
View(p)
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
p <- knitr::include_graphics("brazil_map.png")
p
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
knitr::include_graphics("brazil_map.png")
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
#brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
knitr::include_graphics("brazil_map.png")
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
knitr::include_graphics("brazil_map.png")
knitr::include_graphics("brazil_map.png")
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
knitr::include_graphics("brazil_map.png")
knitr::include_graphics("brazil_map.png")
knitr::include_graphics("brazil_map.png")
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
#brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
knitr::include_graphics("brazil_map.png")
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
#brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png')
knitr::include_graphics("brazil_map.png")
remove.packages("webshot", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
devtools::install_github("wch/webshot")
## Visualização espacial da frquência de compras
brazil_map <- leaflet() %>%
addTiles() %>%
setView(-55.22, -15.26, zoom = 4) %>%
addCircleMarkers(data = customer_location, lng = ~lon, lat = ~lat, popup = ~customer_city,
radius = 3,
color = "red",
stroke=FALSE,
fillOpacity = 0.5)
#brazil_map
saveWidget(brazil_map, 'brazil_map.html', selfcontained = FALSE)
webshot('brazil_map.html', file = 'brazil_map.png', cliprect = 'viewport')
knitr::include_graphics("brazil_map.png")
install.packages("mapview")
library(mapview)
devtools::install_github("r-spatial/mapview@develop")
install.packages("sf")
install.packages("units")
install.packages("mapview")
install.packages("mapview")
install.packages("mapview")
